}else{
df_p_com_lam_tot<-df_p_lam_gr_tot%>%
dplyr::ungroup()%>%
tidyr::complete(Gamma,week,fill=list(count=0,percentage=0))
}
df_p_com_lam_tot_fin<-df_p_com_lam_tot%>%
dplyr::group_by(week)%>%
dplyr::mutate(tot_gen_week=sum(count))
df_p_com_lam_tot_fin$CI<-1.96*(sqrt(((1-df_p_com_lam_tot_fin$percentage)*(df_p_com_lam_tot_fin$percentage))/df_p_com_lam_tot_fin$tot_gen_week))
df_p_com_lam_tot_fin$CI[is.nan(df_p_com_lam_tot_fin$CI)]<-0
df_p_com_lam_tot_fin$est<-"No"
df_p_com_lam_tot_fin$est[df_p_com_lam_tot_fin$tot_gen_week==0]<-"Yes"
df_p_com_lam_tot_fin$Region<-"all"
f_df_list_lam_tot<-list()
for(i in levels(as.factor(df_p_com_lam_tot_fin$Region))){
for(w in levels(as.factor(df_p_com_lam_tot_fin$Gamma))){
if(w != "no"){
df_voc_1<-df_p_com_lam_tot_fin%>%
dplyr::filter(Gamma==w&Region==i)
for(z in 2:nrow(df_voc_1)){
if(df_voc_1$est[z]=="No"){
break
}
}
for(x in z:nrow(df_voc_1)){
if(df_voc_1$est[x]=="Yes"){
one<-df_voc_1$percentage[x-1]
for(y in x:nrow(df_voc_1)){
if(df_voc_1$est[y]=="No"){
break
}
}
sec<-df_voc_1$percentage[y]
df_voc_1$percentage[x]<-(one+sec)/2
}
}
weeks_index<-df_p_week%>%
dplyr::select(week,collection_date)%>%
unique()%>%
tidyr::complete(collection_date)
weeks_index<-weeks_index%>%
dplyr::mutate(week=1:nrow(weeks_index))
df_voc<-df_voc_1[z:nrow(df_voc_1),]%>%
dplyr::left_join(weeks_index)%>%
dplyr::arrange(week)
fit<-loess(percentage~week,degree=1,span=21/nrow(df_voc),data=df_voc)
fit_values<-predict(fit,data.frame(week=z:nrow(df_voc_1)),se=T)
loessfit<-data.frame(week=z:nrow(df_voc_1),fitted=fit_values[["fit"]],se_fitted=fit_values[["se.fit"]])
f_df_list_lam_tot[[paste(i,w,sep="_")]]<-Reduce(function(x,y) dplyr::full_join(x,y,all=TRUE),list(df_voc,loessfit))%>%
mutate(collection_date=as.Date(collection_date))
print(paste(i,w,sep="_"))
}
}
}
f_df_lam_tot<-do.call(rbind,f_df_list_lam_tot)%>%
mutate(fitted=pmax(0,fitted))
#plot of relative prevalence by week
rel_prev_lam_tot<-ggplot(subset(f_df_lam_tot),aes(x=as.POSIXct(collection_date)))+
geom_point(data=subset(f_df_lam_tot,est=="No"&percentage>0),aes(y=percentage),color="goldenrod",show.legend=F)+
geom_errorbar(data=subset(f_df_lam_tot,est=="No"&percentage>0),aes(ymin=pmax(0,percentage-CI),ymax=pmin(1,percentage+CI)),color="lightgrey")+
geom_line(aes(y=fitted),color="goldenrod")+
geom_ribbon(aes(ymin=pmax(0,fitted-se_fitted),ymax=pmin(1,fitted+se_fitted)),alpha=0.5,fill="goldenrod")+
ylim(c(0,1))+
ylab("Prevalence")+
scale_x_datetime(date_breaks="2 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-11-01"),as.POSIXct("2022-01-31")))+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),
strip.background=element_rect(fill="white"))
rel_prev_lam_tot
regions_cases<-reg%>%
dplyr::mutate(City=toupper(City))
cas_city_week<-cas_city_cl%>%
dplyr::filter(date>=as.Date("2020-11-01"))%>%
dplyr::filter(date<=as.Date("2022-01-31"))%>%
dplyr::mutate(week=cut.Date(date,breaks="1 week",labels=FALSE),
collection_date=cut.Date(date,breaks="1 week"))
cas_city_grouped<-cas_city_week%>%
dplyr::filter(City!="")%>%
dplyr::left_join(regions_cases)%>%
dplyr::group_by(Region,collection_date)%>%
dplyr::summarise(cases=n())%>%
tidyr::drop_na()%>%
dplyr::ungroup()%>%
tidyr::complete(collection_date,nesting(Region),fill=list(count=0))%>%
dplyr::mutate(collection_date=as.Date(collection_date))
cases_reg_week<-f_df%>%
dplyr::ungroup()%>%
dplyr::select(week,collection_date)%>%
unique()%>%
right_join(cas_city_grouped)
cases_reg_fit_list<-list()
for(i in levels(as.factor(cases_reg_week$Region))){
cases_reg_week_fin<-cases_reg_week%>%
dplyr::filter(Region==i)
fit<-loess(cases~week,degree=1,span=21/nrow(cases_reg_week_fin),data=cases_reg_week_fin)
fit_values<-predict(fit,data.frame(week=1:length(fit$fitted)),se=T)
loessfit<-data.frame(week=1:length(fit$fitted),smooth_cases=fit_values[["fit"]],se_smooth_cases=fit_values[["se.fit"]])
cases_reg_fit_list[[i]]<-Reduce(function(x,y) dplyr::full_join(x,y,all=TRUE),list(cases_reg_week_fin,loessfit))%>%
mutate(collection_date=as.Date(collection_date))
}
cases_reg_fit<-do.call(rbind,cases_reg_fit_list)%>%
mutate(smooth_cases=pmax(0,smooth_cases))
f_df_cas_all<-left_join(f_df,cases_reg_fit)%>%
mutate(smooth_lin_cases=fitted*smooth_cases,
lin_cases=fitted*cases)
cas_Ls<-ggplot(subset(f_df_cas_all),aes(x=as.POSIXct(collection_date)))+
geom_line(aes(y=smooth_lin_cases,color=SubGs))+
scale_color_manual(values=collin[names(collin)!="Gamma"])+
facet_wrap(~Region)+
ylab("Number of Cases")+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-11-01"),as.POSIXct("2022-01-31")))+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),
legend.position="bottom",
legend.title=element_blank(),
strip.background=element_rect(fill="white"))
cas_Ls
f_df_cas_lam_tot<-f_df_cas_all%>%
dplyr::group_by(week,collection_date)%>%
dplyr::summarise(totcas=sum(smooth_lin_cases))
cas_tot_fin<-ggplot(subset(f_df_cas_lam_tot),aes(x=as.POSIXct(collection_date)))+
geom_line(aes(y=totcas),color="goldenrod")+
geom_line(data=f_df_cas_lam_tot,aes(y=totcas),color="goldenrod")+
ylab("Cases")+
scale_x_datetime(date_breaks="2 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-11-01"),as.POSIXct("2022-01-31")))+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),
legend.position="bottom",
legend.title=element_blank())
cas_tot_fin
write.table(f_df_cas_all,"subGamma_epid_data.tsv",sep="\t",quote=F,row.names=F)
write.table(df_p_reg,"subGamma_geno_data.tsv",sep="\t",quote=F,row.names=F)
View(f_df_cas_all)
setwd("~/Desktop/ordenando/3_Sublineages_analysis/3_5_Sampling_sublineages_regions")
#3:read files####
#read the ordered data (from step 1)
f_df_cas_all<-read.csv(file="subLambda_epid_data.tsv",sep="\t",header=TRUE)
#3:read files####
#read the epidemiological data (from section 3_4, step 5)
f_df_cas_all<-read.csv(file="subLambda_epid_data.tsv",sep="\t",header=TRUE)
View(f_df_cas_all)
library(dplyr)
library(dplyr)
library(ggplot2)
library(tidyr)
theme_set(theme_bw(base_size=12))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
#read the genome data with sublineages information (from section 3_4, step 5)
df_p_reg<-read.csv(file="subLambda_geno_data.tsv",sep="\t",header=TRUE)
View(f_df_cas_all)
p_cor_leg<-ggscatter(subset(f_df_cas_all,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
facet_wrap(~SubLs,scales="free")+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
library(ggpubr)
p_cor_leg<-ggscatter(subset(f_df_cas_all,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
facet_wrap(~SubLs,scales="free")+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
p_cor_leg
f_df_cas_all_lam<-f_df_cas_all%>%
dplyr::ungroup()%>%
dplyr::group_by(week,Region)%>%
dplyr::mutate(lam_cases=sum(smooth_lin_cases))%>%
dplyr::ungroup()%>%
dplyr::filter(SubLs=="SubL1")%>%
dplyr::mutate(samp_gen=round(lam_cases/(sum(lam_cases,na.rm=T)/200),0),
collection_date=as.Date(collection_date))
f_df_cas_all_lam$samp_gen[is.na(f_df_cas_all_lam$samp_gen)]<-0
datos_list<-list()
for(z in 1:nrow(f_df_cas_all_lam)){
print(z)
set.seed(234364151)
if(f_df_cas_all_lam$samp_gen[z]>0){
name<-paste(i,f_df_cas_all_lam$Region[z],f_df_cas_all_lam$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_t$Region[z]&
collection_date==f_df_cas_all_t$collection_date[z]&
SubLs%in%c("SubL1","SubL2"))
if(nrow(te)>=f_df_cas_all_lam$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_lam$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
for(z in 1:nrow(f_df_cas_all_lam)){
print(z)
set.seed(234364151)
if(f_df_cas_all_lam$samp_gen[z]>0){
name<-paste(i,f_df_cas_all_lam$Region[z],f_df_cas_all_lam$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_t$Region[z]&
collection_date==f_df_cas_all_t$collection_date[z]&
SubLs%in%c("SubL1","SubL2"))
if(nrow(te)>=f_df_cas_all_lam$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_lam$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
View(f_df_cas_all_lam)
datos_list<-list()
for(z in 1:nrow(f_df_cas_all_lam)){
print(z)
set.seed(234364151)
if(f_df_cas_all_lam$samp_gen[z]>0){
name<-paste(f_df_cas_all_lam$Region[z],f_df_cas_all_lam$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_t$Region[z]&
collection_date==f_df_cas_all_t$collection_date[z]&
SubLs%in%c("SubL1","SubL2"))
if(nrow(te)>=f_df_cas_all_lam$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_lam$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
View(f_df_cas_all_lam)
datos_list<-list()
datos_list<-list()
for(z in 1:nrow(f_df_cas_all_lam)){
print(z)
set.seed(234364151)
if(f_df_cas_all_lam$samp_gen[z]>0){
name<-paste(f_df_cas_all_lam$Region[z],f_df_cas_all_lam$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_lam$Region[z]&
collection_date==f_df_cas_all_lam$collection_date[z]&
SubLs%in%c("SubL1","SubL2"))
if(nrow(te)>=f_df_cas_all_lam$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_lam$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
datos_lam<-do.call(rbind,datos_list)
gen_group_cases<-datos_lam%>%
dplyr::group_by(Region,collection_date)%>%
dplyr::summarise(samp_count=n())%>%
dplyr::left_join(f_df_cas_all_lam)
p_cor_leg<-ggscatter(subset(f_df_cas_all,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
facet_wrap(~SubLs,scales="free")+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
p_cor_lam<-ggscatter(subset(gen_group_cases,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="none")+
guides(fill=guide_legend(nrow=1))
p_cor_lam
p_cor_sam_lam<-ggscatter(subset(gen_group_cases,count!=0),x="samp_count",y="lam_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="none")+
guides(fill=guide_legend(nrow=1))
p_cor_sam_lam
p_cor_fin<-ggarrange(p_cor_lam,p_cor_sam_lam,labels=c("A","B"),nrow=2,ncol=1,common.legend=T,legend="bottom",legend.grob=cor_leg)
p_cor_lam<-ggscatter(subset(gen_group_cases,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
cor_leg<-get_legend(p_cor_lam)
p_cor_l<-p_cor_lam+
theme(legend.position="none")
p_cor_sam_lam<-ggscatter(subset(gen_group_cases,count!=0),x="samp_count",y="lam_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="none")+
guides(fill=guide_legend(nrow=1))
p_cor_fin<-ggarrange(p_cor_lam,p_cor_sam_lam,labels=c("A","B"),nrow=2,ncol=1,common.legend=T,legend="bottom",legend.grob=cor_leg)
p_cor_fin
ggsave("Lambda_sampling_correlation.jpg",plot=p_cor_fin,dpi=500,height=10,width=7.5)
d_reg<-datos_lam%>%
dplyr::select(name_analysis,Region)
d_loc<-datos_lam%>%
dplyr::select(traits=name_analysis,lat=Latitude,long=Longitude)
d_lat<-datos_lam%>%
dplyr::select(name_analysis,Latitude)
d_lon<-datos_lam%>%
dplyr::select(name_analysis,Longitude)
writeLines(datos_lam$name_analysis,paste("Lambda","_BI_fin_v2.list",sep=""))
write.table(datos_lam,paste("Lambda","_meta_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_reg,paste("Lambda","_region_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lon,paste("Lambda","_lon_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lat,paste("Lambda","_lat_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_loc,paste("Lambda","_loc_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
writeLines(datos_lam$name_analysis,paste("Lambda","_BI_fin_v2.list",sep=""))
write.table(datos_lam,paste("Lambda","_meta_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_reg,paste("Lambda","_region_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lon,paste("Lambda","_lon_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lat,paste("Lambda","_lat_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_loc,paste("Lambda","_loc_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggpubr)
theme_set(theme_bw(base_size=12))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
f_df_cas_all<-read.csv(file="subGamma_epid_data.tsv",sep="\t",header=TRUE)%>%
dplyr::mutate(collection_date=as.Date(collection_date))
df_p_reg<-read.csv(file="subGamma_geno_data.tsv",sep="\t",header=TRUE)
p_cor_leg<-ggscatter(subset(f_df_cas_all,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
facet_wrap(~SubGs,scales="free")+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
p_cor_leg
cor_leg<-get_legend(p_cor_leg)
p_cor<-p_cor_leg+
theme(legend.position="none")
p_cor
sel_gens_list<-list()
gen_group_cases_list<-list()
for(i in levels(as.factor(f_df_cas_all$SubGs))){
print(i)
f_df_cas_all_t<-f_df_cas_all%>%
dplyr::filter(SubGs==i)%>%
dplyr::ungroup()%>%
dplyr::mutate(samp_gen=round(smooth_lin_cases/(sum(smooth_lin_cases,na.rm=T)/200),0),
collection_date=as.Date(collection_date))
f_df_cas_all_t$samp_gen[is.na(f_df_cas_all_t$samp_gen)]<-0
datos_list<-list()
for(z in 1:nrow(f_df_cas_all_t)){
print(z)
set.seed(234364151)
if(f_df_cas_all_t$samp_gen[z]>0){
name<-paste(i,f_df_cas_all_t$Region[z],f_df_cas_all_t$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_t$Region[z]&
collection_date==f_df_cas_all_t$collection_date[z]&
SubGs==i)
if(nrow(te)>=f_df_cas_all_t$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_t$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
sel_gens_list[[i]]<-do.call(rbind,datos_list)
gen_group_cases_list[[i]]<-sel_gens_list[[i]]%>%
dplyr::group_by(Region,collection_date,SubGs)%>%
dplyr::summarise(samp_count=n())%>%
dplyr::left_join(f_df_cas_all_t)
}
gen_group_cases<-do.call(rbind,gen_group_cases_list)
p_cor_sam<-ggscatter(subset(gen_group_cases,count!=0&SubGs!="Lambda"),x="samp_count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=1,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
facet_wrap(~SubGs,scales="free")+
theme(legend.position="none")
p_cor_sam
p_cor_fin<-ggarrange(p_cor,p_cor_sam,labels=c("A","B"),nrow=2,ncol=1,common.legend=T,legend="bottom",legend.grob=cor_leg)
p_cor_fin
ggsave("Lambda_sampling_correlation.jpg",plot=p_cor_fin,dpi=500,height=10,width=7.5)
for(i in 1:length(sel_gens_list)){
print(names(sel_gens_list[i]))
lin<-names(sel_gens_list[i])
d_reg<-sel_gens_list[[i]]%>%
dplyr::select(name_analysis,Region)
d_loc<-sel_gens_list[[i]]%>%
dplyr::select(traits=name_analysis,lat=Latitude,long=Longitude)
d_lat<-sel_gens_list[[i]]%>%
dplyr::select(name_analysis,Latitude)
d_lon<-sel_gens_list[[i]]%>%
dplyr::select(name_analysis,Longitude)
writeLines(sel_gens_list[[i]]$name_analysis,paste(lin,"_BI_fin_v2.list",sep=""))
write.table(sel_gens_list[[i]],paste(lin,"_meta_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_reg,paste(lin,"_region_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lon,paste(lin,"_lon_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_lat,paste(lin,"_lat_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
write.table(d_loc,paste(lin,"_loc_fin_v2.tsv",sep=""),sep="\t",quote=F,row.names=F)
}
ggsave("Gamma_sampling_correlation.jpg",plot=p_cor_fin,dpi=500,height=10,width=7.5)
library(dplyr)
library(ggplot2)
library(tidyr)
library(ggpubr)
theme_set(theme_bw(base_size=12))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
f_df_cas_all<-read.csv(file='subLambda_epid_data.tsv',sep="\t",header=TRUE)%>%
dplyr::mutate(collection_date=as.Date(collection_date))
#read the genome data with sublineages information (from section 3_4, step 5)
df_p_reg<-read.csv(file="subLambda_geno_data.tsv",sep="\t",header=TRUE)
f_df_cas_all_lam<-f_df_cas_all%>%
dplyr::ungroup()%>%
dplyr::group_by(week,Region)%>%
dplyr::mutate(lam_cases=sum(smooth_lin_cases))%>%
dplyr::ungroup()%>%
dplyr::filter(SubLs=="SubL1")%>%
dplyr::mutate(samp_gen=round(lam_cases/(sum(lam_cases,na.rm=T)/200),0),
collection_date=as.Date(collection_date))
f_df_cas_all_lam$samp_gen[is.na(f_df_cas_all_lam$samp_gen)]<-0
#5:sampling the data according to cases by region and week####
datos_list<-list()
for(z in 1:nrow(f_df_cas_all_lam)){
print(z)
set.seed(234364151)
if(f_df_cas_all_lam$samp_gen[z]>0){
name<-paste(f_df_cas_all_lam$Region[z],f_df_cas_all_lam$collection_date[z],sep="_")
te<-df_p_reg%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(Region==f_df_cas_all_lam$Region[z]&
collection_date==f_df_cas_all_lam$collection_date[z]&
SubLs%in%c("SubL1","SubL2"))
if(nrow(te)>=f_df_cas_all_lam$samp_gen[z]){
datos_list[[name]]<-te%>%
dplyr::sample_n(f_df_cas_all_lam$samp_gen[z])
}else{
datos_list[[name]]<-te
}
}
}
datos_lam<-do.call(rbind,datos_list)
gen_group_cases<-datos_lam%>%
dplyr::group_by(Region,collection_date)%>%
dplyr::summarise(samp_count=n())%>%
dplyr::left_join(f_df_cas_all_lam)
p_cor_lam<-ggscatter(subset(gen_group_cases,count!=0),x="count",y="smooth_lin_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
cor_leg<-get_legend(p_cor_lam)
p_cor_l<-p_cor_lam+
theme(legend.position="none")
p_cor_sam_lam<-ggscatter(subset(gen_group_cases,count!=0),x="samp_count",y="lam_cases",
color="black",fill="Region",shape=21,size=3,
add="reg.line",
add.params=list(color="blue",fill="lightgray"),
conf.int=TRUE,cor.coef=TRUE,
cor.coeff.args=list(method="pearson",label.x=3,label.sep="\n"))+
labs(y="Number of Cases",x="Number of genomes")+
scale_fill_manual(values=colreg)+
theme(legend.position="none")+
guides(fill=guide_legend(nrow=1))
p_cor_fin<-ggarrange(p_cor_lam,p_cor_sam_lam,labels=c("A","B"),nrow=2,ncol=1,common.legend=T,legend="bottom",legend.grob=cor_leg)
ggsave("Lambda_sampling_correlation.jpg",plot=p_cor_fin,dpi=500,height=10,width=7.5)
