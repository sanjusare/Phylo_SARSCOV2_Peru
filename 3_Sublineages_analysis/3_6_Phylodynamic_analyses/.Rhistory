axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(names(dats_trees_list)[i])
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
for(i in 1:length(dats_trees_list)){
heat_ps[[names(dats_trees_list)[i]]]<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(dats_trees_list)[i]),"SubL1+L2",names(dats_trees_list)[i]))
}
fin_p<-ggarrange(plotlist=c(heat_ps[10:12],heat_ps[1:9]),ncol=3,nrow=4,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages_samples.jpg",plot=fin_p,dpi=500,height=14,width=12)
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
for(i in 1:length(dats_trees_list)){
heat_ps[[names(dats_trees_list)[i]]]<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(dats_trees_list)[i]),paste("SubL1+L2",sapply(strsplit(names(dats_trees_list)[i],"_"),"[",2)),names(dats_trees_list)[i]))
}
fin_p<-ggarrange(plotlist=c(heat_ps[10:12],heat_ps[1:9]),ncol=3,nrow=4,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages_samples.jpg",plot=fin_p,dpi=500,height=14,width=12)
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
for(i in 1:length(dats_trees_list)){
heat_ps[[names(dats_trees_list)[i]]]<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(dats_trees_list)[i]),paste("SubL1+L2",sapply(strsplit(names(dats_trees_list)[i],"_"),"[",2),sep="_"),names(dats_trees_list)[i]))
}
fin_p<-ggarrange(plotlist=c(heat_ps[10:12],heat_ps[1:9]),ncol=3,nrow=4,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages_samples.jpg",plot=fin_p,dpi=500,height=14,width=12)
lins<-unique(sapply(strsplit(names(dats_trees_list),"_"),"[",1))
d_trans_lin<-list()
for(i in lins){
test<-dats_trees_list[grepl(i,names(dats_trees_list))]
transitions<-list()
for(z in 1:length(test)){
dt<-test[[z]][[2]]%>%
dplyr::mutate(tr=factor(tree))
newlev<-as.numeric(sample(levels(dt$tr),400))
dtnew<-test[[z]][[2]]%>%
dplyr::filter(tree%in%newlev)
transitions[[paste(i,z,sep="_")]]<-dtnew
}
transnew<-do.call(rbind,transitions)
dats_grnew<-transnew%>%
dplyr::group_by(loc1,loc2)%>%
dplyr::summarise(freq=n())%>%
dplyr::filter(loc1!=loc2)%>%
dplyr::ungroup()%>%
dplyr::mutate(perc=freq/sum(freq),
sample=i)
dats_com<-list(transnew,dats_grnew)
d_trans_lin[[i]]<-dats_com
}
for(df in names(d_trans_lin)){
print(df)
d_trans_lin[[df]][[2]]$HPD_L<-0
d_trans_lin[[df]][[2]]$HPD_H<-0
d_trans_lin[[df]][[2]]$Median<-0
d_trans_lin[[df]][[2]]$from_to<-paste(d_trans_lin[[df]][[2]]$loc1,"_to_",d_trans_lin[[df]][[2]]$loc2,sep="")
test1<-d_trans_lin[[df]][[1]]%>%
dplyr::group_by(tree,loc1,loc2,subsample)%>%
dplyr::summarise(transitions=n())%>%
dplyr::ungroup()
test_list<-list()
for(w in levels(as.factor(test1$subsample))){
test_list[[as.character(w)]]<-test1%>%
dplyr::filter(subsample==w)%>%
tidyr::complete(tree,loc1,loc2,subsample,fill=list(transitions=0))
}
test<-do.call(rbind,test_list)%>%
dplyr::filter(loc1!=loc2)%>%
dplyr::mutate(from_to=paste(loc1,"_to_",loc2,sep=""))
for(i in levels(as.factor(test$from_to))){
print(i)
d<-test%>%
dplyr::filter(from_to==i)
d_trans_lin[[df]][[2]]$HPD_L[d_trans_lin[[df]][[2]]$from_to==i]<-round(quantile(d$transitions,0.025),0)
d_trans_lin[[df]][[2]]$HPD_H[d_trans_lin[[df]][[2]]$from_to==i]<-round(quantile(d$transitions,0.975),0)
d_trans_lin[[df]][[2]]$Median[d_trans_lin[[df]][[2]]$from_to==i]<-median(d$transitions)
}
}
medians<-c()
for(i in 1:length(d_trans_lin)){
medians<-append(medians,d_trans_lin[[i]][[2]]$Median)
}
medians
p_heat_leg<-ggplot(d_trans_lin[[i]][[2]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(names(dats_trees_list)[i])
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
for(i in 1:length(d_trans_lin)){
heat_ps[[names(d_trans_lin)[i]]]<-ggplot(d_trans_lin[[i]][[2]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(d_trans_lin)[i]),"SubL1+L2",names(d_trans_lin)[i]))
}
fin_p_lin<-ggarrange(plotlist=c(heat_ps[4],heat_ps[1:3]),ncol=2,nrow=2,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages.jpg",plot=fin_p_lin,dpi=500,height=7,width=8)
setwd("I:/Mi unidad/Santiago/BIO_INF_TEC_URP/hCoV/Proyecto_hCoV/Peruvian_analysis/final_NC/3_Sublineages_analysis/3_6_Phylodynamic_analyses")
library(ggtree)
library(treeio)
library(ggplot2)
library(ggpubr)
theme_set(theme_bw(base_size=15))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
collin<-c("SubL1+L2"="forestgreen","SubG1"="dodgerblue","SubG2"="firebrick","SubG3"="#ad71ab")
files<-dir(pattern="*_MCT.tree")
#4:Extract the probabilities of each location to be the origin and the date of origin####
height_list<-list()
prob_list<-list()
for(i in 1:length(files)){
tr<-read.beast(files[i])
data<-data.frame(tip=tr@phylo[["tip.label"]],
date=as.Date(sapply(strsplit(tr@phylo[["tip.label"]],"\\|"),"[",4)))
mrt<-Date2decimal(max(data$date))
locset<-tr@data$location.set[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]]
locprob<-tr@data$location.set.prob[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]]
height_medi<-as.numeric(tr@data$CAheight_median[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]])
height_mean<-as.numeric(tr@data$CAheight_mean[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]])
height_low95<-as.numeric(tr@data$CAheight_0.95_HPD[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]][1])
height_hig95<-as.numeric(tr@data$CAheight_0.95_HPD[tr@data$node==length(tr@phylo[["tip.label"]])+1][[1]][2])
date_medi<-decimal2Date(mrt-height_medi)
date_mean<-decimal2Date(mrt-height_mean)
date_low95<-decimal2Date(mrt-height_low95)
date_hig95<-decimal2Date(mrt-height_hig95)
height_list[[as.character(i)]]<-data.frame(height_median=height_medi,
height_mean=height_mean,
height_low95=height_low95,
height_hig95=height_hig95,
date_median=date_medi,
date_mean=date_mean,
date_low95=date_low95,
date_hig95=date_hig95,
sample=as.character(sapply(strsplit(files[i],"_"),"[",1)),
subsample=as.numeric(gsub("v2","",sapply(strsplit(files[i],"_"),"[",4))),
mrt=mrt)
prob_list[[as.character(i)]]<-data.frame(country=locset,
prob=locprob,
sample=as.character(sapply(strsplit(files[i],"_"),"[",1)),
subsample=as.numeric(gsub("v2","",sapply(strsplit(files[i],"_"),"[",4))))
}
heights<-do.call(rbind,height_list)
probs<-do.call(rbind,prob_list)
probs$sample[probs$sample=="SubL"]<-"SubL1+L2"
heights$sample[heights$sample=="SubL"]<-"SubL1+L2"
probs$sample<-factor(probs$sample,levels=c("SubL1+L2","SubG1","SubG2","SubG3"),ordered=T)
heights$sample<-factor(heights$sample,levels=c("SubL1+L2","SubG1","SubG2","SubG3"),ordered=T)
#5:Calculate means by repetitions of location origin probabilities####
over_prob<-probs%>%
dplyr::group_by(country,sample)%>%
dplyr::summarise(prob=mean(prob))
over_prob$sample<-factor(over_prob$sample,levels=c("SubL1+L2","SubG1","SubG2","SubG3"),ordered=T)
#6:Calculate means by repetitions of origin dates probabilities####
over_heights<-heights%>%
dplyr::group_by(sample)%>%
dplyr::summarise(height_median=mean(height_median),
height_mean=mean(height_mean),
height_low95=mean(height_low95),
height_hig95=mean(height_hig95),
date_median=mean(date_median),
date_mean=mean(date_mean),
date_low95=mean(date_low95),
date_hig95=mean(date_hig95))
over_heights$sample<-factor(over_heights$sample,levels=c("SubL1+L2","SubG1","SubG2","SubG3"),ordered=T)
#7:Plots of probability of each region to be the origin of sublineages and date distribution of the origin####
pprobs<-ggplot(over_prob,aes(x=as.factor(sample),y=prob,fill=country))+
geom_bar(stat="identity",position="dodge")+
labs(y="Location probability of root")+
scale_fill_manual(values=colreg)+
theme(legend.title=element_blank(),
legend.position=c(0.6,0.85),
axis.title.x=element_blank(),
axis.text.y=element_text(size=10),
axis.text.x=element_text(size=10),
legend.key.size=unit(0.1,"in"),
legend.margin=margin(0.01,0.01,0.01,0.01),
legend.box.margin=margin(0.001,0.001,0.001,0.001),
legend.box.spacing=unit(0.1,"in"),
legend.text=element_text(size=7))+
ylim(c(0,1))+
guides(fill=guide_legend(ncol=1))
pheights<-ggplot(over_heights,aes(x=as.factor(sample),y=as.POSIXct(date_median)))+
geom_pointrange(aes(ymin=as.POSIXct(date_low95),ymax=as.POSIXct(date_hig95),color=sample))+
geom_point(aes(y=as.POSIXct(date_mean),fill=sample),shape=21,size=5,alpha=0.5)+
labs(y="Root Date")+
scale_y_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-04-01"),as.POSIXct("2021-06-01")))+
theme(axis.title.x=element_blank(),
axis.text.y=element_text(size=10),
axis.text.x=element_text(size=10),
legend.position="none")+
scale_color_manual(values=collin)+
scale_fill_manual(values=collin)
p_origin_lin<-ggarrange(pprobs,pheights,ncol=2,nrow=1,labels=c("A","B"),align="h",widths=c(0.9,1))
pprobs_samp<-ggplot(probs,aes(x=as.factor(sample),y=prob,fill=country))+
geom_bar(stat="identity",position="dodge")+
labs(y="Location probability of root")+
facet_wrap(~subsample)+
scale_fill_manual(values=colreg)+
theme(legend.title=element_blank(),
legend.position="bottom",
axis.title.x=element_blank(),
axis.text.y=element_text(size=10),
axis.text.x=element_text(size=8),
legend.key.size=unit(0.1,"in"),
legend.margin=margin(0.01,0.01,0.01,0.01),
legend.box.margin=margin(0.001,0.001,0.001,0.001),
legend.box.spacing=unit(0.1,"in"),
legend.text=element_text(size=7))+
ylim(c(0,1))+
guides(fill=guide_legend(nrow=1))
pheights_samp<-ggplot(heights,aes(x=as.factor(sample),y=as.POSIXct(date_median)))+
geom_pointrange(aes(ymin=as.POSIXct(date_low95),ymax=as.POSIXct(date_hig95),color=sample))+
geom_point(aes(y=as.POSIXct(date_mean),fill=sample),shape=21,size=5,alpha=0.5)+
labs(y="Root Date")+
facet_wrap(~subsample)+
scale_y_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-04-01"),as.POSIXct("2021-06-01")))+
theme(axis.title.x=element_blank(),
axis.text.y=element_text(size=10),
axis.text.x=element_text(size=8),
legend.position="none")+
scale_color_manual(values=collin)+
scale_fill_manual(values=collin)
p_fin<-ggarrange(p_origin_lin,fin_p,nrow=2,ncol=1,heights=c(1,2))
#10:final figure of phylogeography of lineages, first execute lins_origin_v2.R####
p_fin<-ggarrange(p_origin_lin,fin_p_lin,nrow=2,ncol=1,heights=c(1,2))
ggsave("Phylodynamic_analysis_sublineages.jpg",plot=p_fin,dpi=500,height=11,width=8)
p_fin<-ggarrange(p_origin_lin,fin_p_lin,nrow=2,ncol=1,heights=c(1,2),labels=c("","C"))
ggsave("Phylodynamic_analysis_sublineages.jpg",plot=p_fin,dpi=500,height=11,width=8)
setwd("I:/Mi unidad/Santiago/BIO_INF_TEC_URP/hCoV/Proyecto_hCoV/Peruvian_analysis/final_NC/3_Sublineages_analysis/3_6_Phylodynamic_analyses/")
setwd("I:/Mi unidad/Santiago/BIO_INF_TEC_URP/hCoV/Proyecto_hCoV/Peruvian_analysis/final_NC/3_Sublineages_analysis/3_6_Phylodynamic_analyses")
args<-commandArgs(trailingOnly = TRUE)
#2:load libraries and establish settings####
library(ggplot2)
library(ggtree)
library(treeio)
library(ggpubr)
library(phytools)
library(dplyr)
theme_set(theme_bw(base_size=15))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
args<-commandArgs(trailingOnly = TRUE)
#2:load libraries and establish settings####
library(ggplot2)
library(ggtree)
library(treeio)
library(ggpubr)
library(phytools)
library(dplyr)
theme_set(theme_bw(base_size=15))
Sys.setlocale("LC_TIME", "English")
colreg<-c("center"="firebrick","north"="dodgerblue","south"="forestgreen","mid-east"="darkmagenta","north-east"="goldenrod","south-east"="hotpink3")
collin<-c("SubL"="forestgreen","SubG1"="dodgerblue","SubG2"="firebrick","SubG3"="#ad71ab")
files<-dir(pattern="*f2.trees")
trees_list<-list()
for(i in 1:length(files)){
lin<-as.character(sapply(strsplit(files[i],"_"),"[",1))
subsample<-as.numeric(gsub("v2","",sapply(strsplit(files[i],"_"),"[",4)))
name<-paste(lin,subsample,sep="_")
print(name)
trees_list[[name]]<-read.beast(files[i])
}
dats_trees_list<-list()
for(y in 1:length(trees_list)){
print(names(trees_list)[y])
dats_list<-list()
for(z in 1:length(trees_list[[y]])){
print(paste(y,z))
locroot<-trees_list[[y]][[z]]@data$location[trees_list[[y]][[z]]@data$node==as.character(length(trees_list[[y]][[z]]@phylo[["tip.label"]])+1)][[1]]
heights<-as.data.frame(nodeHeights(trees_list[[y]][[z]]@phylo))
edges<-as.data.frame(trees_list[[y]][[z]]@phylo[["edge"]])
names(edges)<-c("node1","node2")
names(heights)<-c("height1","height2")
heights$height1<-max(append(heights$height1,heights$height2))-heights$height1
heights$height2<-max(append(heights$height1,heights$height2))-heights$height2
dat<-data.frame(edges,heights)
maxdate<-Date2decimal(max(as.Date(sapply(strsplit(trees_list[[y]][[z]]@phylo[["tip.label"]],"\\|"),"[",4))))
dat$he_y1<-maxdate-heights$height1
dat$he_y2<-maxdate-heights$height2
dat$date1<-decimal2Date(dat$he_y1)
dat$date2<-decimal2Date(dat$he_y2)
dat$loc1<-NA
dat$loc2<-NA
trees_list[[y]][[z]]@data$node<-as.numeric(trees_list[[y]][[z]]@data$node)
for(i in 1:nrow(dat)){
dat$loc1[i]<-trees_list[[y]][[z]]@data$location[trees_list[[y]][[z]]@data$node==edges$node1[i]]
dat$loc2[i]<-trees_list[[y]][[z]]@data$location[trees_list[[y]][[z]]@data$node==edges$node2[i]]
}
dat$tree<-z
dat$locroot<-locroot
dats_list[[z]]<-dat
}
dats<-do.call(rbind,dats_list)%>%
dplyr::mutate(sample=sapply(strsplit(names(trees_list)[y],"_"),"[",1),
subsample=sapply(strsplit(names(trees_list)[y],"_"),"[",2))
dats_un<-dats%>%
dplyr::filter(loc1!=loc2)
dats_gr<-dats%>%
dplyr::group_by(loc1,loc2)%>%
dplyr::summarise(freq=n())%>%
dplyr::filter(loc1!=loc2)%>%
dplyr::ungroup()%>%
dplyr::mutate(perc=freq/sum(freq),
sample=sapply(strsplit(names(trees_list)[y],"_"),"[",1),
subsample=sapply(strsplit(names(trees_list)[y],"_"),"[",2))
dats_com<-list(dats,dats_un,dats_gr)
dats_trees_list[[names(trees_list)[y]]]<-dats_com
}
for(df in names(dats_trees_list)){
print(df)
dats_trees_list[[df]][[3]]$HPD_L<-0
dats_trees_list[[df]][[3]]$HPD_H<-0
dats_trees_list[[df]][[3]]$Median<-0
dats_trees_list[[df]][[3]]$from_to<-paste(dats_trees_list[[df]][[3]]$loc1,"_to_",dats_trees_list[[df]][[3]]$loc2,sep="")
test<-dats_trees_list[[df]][[2]]%>%
dplyr::group_by(tree,loc1,loc2)%>%
dplyr::summarise(transitions=n())%>%
dplyr::ungroup()%>%
tidyr::complete(tree,loc1,loc2,fill=list(transitions=0))%>%
dplyr::filter(loc1!=loc2)%>%
dplyr::mutate(from_to=paste(loc1,"_to_",loc2,sep=""))
for(i in levels(as.factor(test$from_to))){
print(i)
d<-test%>%
dplyr::filter(from_to==i)
dats_trees_list[[df]][[3]]$HPD_L[dats_trees_list[[df]][[3]]$from_to==i]<-round(quantile(d$transitions,0.025),0)
dats_trees_list[[df]][[3]]$HPD_H[dats_trees_list[[df]][[3]]$from_to==i]<-round(quantile(d$transitions,0.975),0)
dats_trees_list[[df]][[3]]$Median[dats_trees_list[[df]][[3]]$from_to==i]<-median(d$transitions)
}
}
#6:heatmap of transitions by region####
medians<-c()
for(i in 1:length(dats_trees_list)){
medians<-append(medians,dats_trees_list[[i]][[3]]$Median)
}
names(dats_trees_list)[i]
p_heat_leg<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(names(dats_trees_list)[i])
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
sapply(strsplit(names(dats_trees_list)[i],"_"),"[",1)
ifelse(grepl("SubL",sapply(strsplit(names(dats_trees_list)[i],"_"),"[",1),"SubL1+L2")
for(i in 1:length(dats_trees_list)){
heat_ps<-list()
for(i in 1:length(dats_trees_list)){
heat_ps[[names(dats_trees_list)[i]]]<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(dats_trees_list)[i]),sapply(strsplit(names(dats_trees_list)[i],"_"),"[",1),"SubL1+L2"))
}
setwd("I:/Mi unidad/Santiago/BIO_INF_TEC_URP/hCoV/Proyecto_hCoV/Peruvian_analysis/final_NC/3_Sublineages_analysis/3_6_Phylodynamic_analyses")
fin_p<-ggarrange(plotlist=c(heat_ps[4],heat_ps[1:3]),ncol=2,nrow=2,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages.jpg",plot=fin_p,dpi=500,height=7,width=8)
names(dats_trees_list)[i]
names(dats_trees_list)
heat_leg<-get_legend(p_heat_leg)
heat_ps<-list()
for(i in 1:length(dats_trees_list)){
heat_ps[[names(dats_trees_list)[i]]]<-ggplot(dats_trees_list[[i]][[3]],aes(x=loc2,y=loc1,fill=Median))+
geom_tile()+
geom_text(aes(label=paste(HPD_L,"-",HPD_H,sep="")))+
scale_fill_gradient2(low="darkseagreen",high="cornflowerblue",mid="white",
midpoint=(max(medians)+min(medians))/2,limit=c(min(medians),max(medians)))+
theme(legend.position="none",
panel.grid=element_blank(),
panel.background=element_rect(fill="lightgrey"),
axis.title=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0))+
ggtitle(ifelse(grepl("SubL",names(dats_trees_list)[i]),"SubL1+L2",sapply(strsplit(names(dats_trees_list)[i],"_"),"[",1)))
}
fin_p<-ggarrange(plotlist=c(heat_ps[4],heat_ps[1:3]),ncol=2,nrow=2,legend.grob=heat_leg,legend="right")%>%
annotate_figure(left=text_grob("From",rot=90,face="bold",size=20),bottom=text_grob("To",face="bold",size=20))
ggsave("Matrices_of_transitions_by_sublineages.jpg",plot=fin_p,dpi=500,height=7,width=8)
library(ggplot2)
library(dplyr)
theme_set(theme_bw(base_size=15))
Sys.setlocale("LC_TIME", "English")
colors<-c("#cbcbf7","#f7cbcb","#f7f4cb","thistle1","#91e3db","#abc4d9","#9c9181","aquamarine4","#a9c7af","#99a5d6","#f4b771","#ec74dc","#9ed5ff","#dedede")
files<-dir(pattern="*f2.log")
t_list<-list()
files
files<-dir(pattern="*f2.log")
t_list<-list()
files<-dir(pattern="*f2.log")
t_list<-list()
for(i in 1:length(files)){
t<-read.csv(files[i],sep="\t",comment.char="#")
lin<-sapply(strsplit(files[i],"_"),"[",1)
samp<-as.numeric(gsub("v2","",sapply(strsplit(files[i],"_"),"[",4)))
t_list[[paste(lin,samp,sep="_")]]<-t%>%
dplyr::select(clock_rate=names(t)[grepl("clockRate",names(t))])%>%
dplyr::mutate(lineage=lin,sample=samp)
}
t<-do.call(rbind,t_list)
View(t)
View(t)
t$lineage[t$lineage=="SubL"]<-"SubL1+L2"
p_clock<-ggplot(t,aes(x=clock_rate,fill=as.factor(sample)))+
geom_density(alpha=0.3)+
labs(x="Clock rate (s/s/y)",fill="sample")+
theme(axis.title.y=element_blank(),
legend.position="bottom")+
scale_fill_manual(values=c("forestgreen","dodgerblue","firebrick"))+
guides(fill=guide_legend(nrow=1))+
facet_wrap(~lineage)+
p_clock<-ggplot(t,aes(x=clock_rate,fill=as.factor(sample)))+
geom_density(alpha=0.3)+
labs(x="Clock rate (s/s/y)",fill="sample")+
theme(axis.title.y=element_blank(),
legend.position="bottom")+
scale_fill_manual(values=c("forestgreen","dodgerblue","firebrick"))+
guides(fill=guide_legend(nrow=1))+
facet_wrap(~lineage)
p_clock<-ggplot(t,aes(x=clock_rate,fill=as.factor(sample)))+
geom_density(alpha=0.3)+
labs(x="Clock rate (s/s/y)",fill="sample")+
theme(axis.title.y=element_blank(),
legend.position="bottom")+
scale_fill_manual(values=c("forestgreen","dodgerblue","firebrick"))+
guides(fill=guide_legend(nrow=1))+
facet_wrap(~lineage)
ggsave("Clock_rate_distribution.jpg",plot=p_clock,dpi=500,height=5,width=5)
ggsave("Clock_rate_sublineages.jpg",plot=p_clock,dpi=500,height=5,width=5)
files<-dir(pattern="*f2.log")
t_list<-list()
files
t_list<-list()
for(i in 1:length(files)){
t<-read.csv(files[i],sep="\t",comment.char="#")
lin<-sapply(strsplit(files[i],"_"),"[",1)
t_list[[paste(lin,samp,sep="_")]]<-t%>%
dplyr::select(clock_rate=names(t)[grepl("clockRate",names(t))])%>%
dplyr::mutate(lineage=lin)
}
t<-do.call(rbind,t_list)
t$lineage[t$lineage=="SubL"]<-"SubL1+L2"
p_clock<-ggplot(t,aes(x=clock_rate))+
geom_density(alpha=0.3)+
labs(x="Clock rate (s/s/y)")+
theme(axis.title.y=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
facet_wrap(~lineage)
ggsave("Clock_rate_sublineages.jpg",plot=p_clock,dpi=500,height=5,width=5)
p_clock<-ggplot(t,aes(x=clock_rate))+
geom_density(alpha=0.3)+
labs(x="Clock rate (s/s/y)")+
theme(axis.title.y=element_blank(),
legend.position="bottom")+
facet_wrap(~lineage)
ggsave("Clock_rate_sublineages.jpg",plot=p_clock,dpi=500,height=5,width=5)
