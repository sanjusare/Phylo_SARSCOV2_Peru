gc()
citation()
toBibtex(citation())
oc <- options(contrasts = c("contr.treatment", "contr.poly"))
library(MASS)
example(birthwt)
View(bwt)
(bwt.mu <- multinom(low ~ ., bwt))
(bwt.mu <- multinom(low ~ ., bwt))
library(nnet)
(bwt.mu <- multinom(low ~ ., bwt))
View(bwt.mu)
options(oc)
View(oc)
rlnorm(1000,10^-5,10^-5)
t<-rlnorm(1000,10^-5,10^-5)
library(ggplot)
library(ggplot2)
ggplot(aes(t))+
geom_density()
t<-dataframe(x=rlnorm(1000,10^-5,10^-5))
t<-data.frame(x=rlnorm(1000,10^-5,10^-5))
ggplot(t,aes(x=t))+
geom_density()
ggplot(t,aes(x=x))+
geom_density()
t<-data.frame(x=rlnorm(1000,10^-5,10^-5),y=log(rlnorm(1000,10^-5,10^-5)))
View(t)
ggplot(t)+
geom_density(,aes(x=x),color="red")+
geom_density(,aes(x=y),color="blue")
ggplot(t)+
geom_density(aes(x=x),color="red")+
geom_density(aes(x=y),color="blue")
ggplot(t)+
geom_density(aes(x=y),color="blue")
mean(t$y)
mean(t$y)
sd(t$y)
mean(t$x)
sd(t$x)
ggplot(t)+
geom_density(aes(x=x),color="red")+
t2<-data.frame(x=rlnorm(1000,1,1),y=log(rlnorm(1000,1,1)))
t2<-data.frame(x=rlnorm(1000,1,1),y=log(rlnorm(1000,1,1)))
ggplot(t2)+
geom_density(aes(x=x),color="blue")
t2<-data.frame(x=rlnorm(5000,1,1),y=log(rlnorm(5000,1,1)))
ggplot(t2)+
geom_density(aes(x=x),color="blue")
ggplot(t2)+
geom_density(aes(x=y),color="blue")
mean(t2$x)
mean(t2$y)
mean(t2$x)
sd(t2$x)
mean(t2$y)
sd(t2$y)
mean(t2$y)
sd(t2$y)
t3<-data.frame(x=rnorm(5000,1,1),y=exp(rnorm(5000,1,1)))
ggplot(t3)+
geom_density(aes(x=x),color="blue")
ggplot(t3)+
geom_density(aes(x=y),color="blue")
ggplot(t2)+
geom_density(aes(x=x),color="blue")
mean(t2$x)
sd(t2$x)
mean(t3$x)
sd(t3$x)
mean(t3$y)
sd(t3$y)
mean(t2$y)
sd(t2$y)
mean(t2$x)
sd(t2$x)
mean(t2$y)
sd(t2$y)
exp(1+0.5*1^2)
mean(t2$y)
mean(t2$x)
mean(t2$x)==exp(1+0.5*1^2)
exp(mean(t2$y)+0.5*sd(t2$y)^2)
exp(1+0.5*1^2)
exp(rnorm(5000,1,1)
)
ggplot(t3)+
geom_density(aes(x=y),color="blue")
exp(mean(t2$y)+0.5*sd(t2$y)^2)
mean(t2$y)
log(1)
exp(1)
exp(1)-1
sqrt(exp(1)-1)
t5<-data.frame(x=rlnorm(1000,-0.5,1),y=log(rlnorm(1000,-0.5,1)))
t5<-data.frame(x=rlnorm(10000,-0.5,1),y=log(rlnorm(10000,-0.5,1)))
library(ggplot2)
ggplot(t5)+
geom_density(aes(x=y),color="blue")
ggplot(t5)+
geom_density(aes(x=x),color="blue")
ggplot(t5)+
geom_density(aes(x=x),color="blue")+
xlim(c(0,3))
mean(t5$x)
9E-6
t5<-data.frame(x=rlnorm(10000,9.133E-6,1.184E-5),y=log(rlnorm(10000,9.133E-6,1.184E-5)))
library(ggplot2)
ggplot(t5)+
geom_density(aes(x=x),color="blue")+
xlim(c(0,3))
t5<-data.frame(x=rlnorm(10000,9.133E-6,1.184E-5),y=log(rlnorm(10000,9.133E-6,1.184E-5)))
library(ggplot2)
ggplot(t5)+
geom_density(aes(x=x),color="blue")
t5<-data.frame(x=rlnorm(10000,9.133E-6,1.184E-5),y=log(rlnorm(10000,9.133E-6,1.184E-5)))
library(ggplot2)
ggplot(t5)+
geom_density(aes(x=x),color="blue")
ggplot(t)+
geom_density(aes(x=y),color="red")
ggplot(t5)+
geom_density(aes(x=y),color="red")
ggplot(t5)+
geom_density(aes(x=x),color="blue")
ggplot(t5)+
geom_density(aes(x=y),color="red")
View(t5)
x=seq(-5,5,0.1)
y=2x^3-x^2-18x-9
y=formula(2x^3-x^2-18x-9)
y=formula("2x^3-x^2-18x-9")
y=2*x^3-x^2-18*x-9
2*x^3
-x^2
-18*x
y=2*x^3-x^2-18*x+9
y
plot(x,y)
tab<-data.frame(x,y)
View(tab)
x=seq(-50,50,0.1)
y=2*x^3-x^2-18*x+9
tab<-data.frame(x,y)
plot(x,y)
x=seq(-50,50,0.1)
x=seq(-5,5,0.1)
y=3*x^3-2*x^2-12*x+8
tab<-data.frame(x,y)
plot(x,y)
#set working directory####
setwd("~/Desktop/ordenando/1_Epidemiological_analysis")
#load libraries and establish settings####
#library(dplyr)
#library(lubridate)
library(ggplot2)
theme_set(theme_bw(base_size=15))
Sys.setlocale("LC_TIME", "English")
cols<-c("Omicron"="#db8a8a","Gamma"="#dbd48a","Lambda"="#8fdb8a","Delta"="#8ad3db","Mu"="#a18adb","Alpha"="#db8ac0","Other"="darkgrey")
colors<-c("#cbcbf7","#f7cbcb","#f7f4cb","thistle1","#91e3db","#abc4d9","#9c9181","aquamarine4","#a9c7af","#99a5d6","#f4b771","#ec74dc","#9ed5ff","#dedede")
tabla<-read.csv("ordered_metadata.tsv",sep="\t")
#download from https://github.com/owid/covid-19-data/tree/master/public/data
cas_wor<-read.csv("owid-covid-data.csv")
#download from https://www.datosabiertos.gob.pe/dataset/casos-positivos-por-covid-19-ministerio-de-salud-minsa
cas_city<-read.csv("positivos_covid.csv",sep=";")
View(cas_wor)
cas_dea<-cas_wor%>%
dplyr::filter(location=="Peru")%>%
dplyr::select(Date=date,new_deaths,new_cases)%>%
dplyr::mutate(new_deaths=replace_na(new_deaths,0),
new_cases=replace_na(new_cases,0),)%>%
dplyr::mutate(Date=as.Date(Date))%>%
dplyr::mutate(rolldeath_14=zoo::rollmean(new_deaths,k=14,fill=0),
rollcases_14=zoo::rollmean(new_cases,k=14,fill=0))
#load libraries and establish settings####
library(dplyr)
#library(tidyr)
library(zoo)
cas_dea<-cas_wor%>%
dplyr::filter(location=="Peru")%>%
dplyr::select(Date=date,new_deaths,new_cases)%>%
dplyr::mutate(new_deaths=replace_na(new_deaths,0),
new_cases=replace_na(new_cases,0),)%>%
dplyr::mutate(Date=as.Date(Date))%>%
dplyr::mutate(rolldeath_14=zoo::rollmean(new_deaths,k=14,fill=0),
rollcases_14=zoo::rollmean(new_cases,k=14,fill=0))
library(tidyr)
cas_dea<-cas_wor%>%
dplyr::filter(location=="Peru")%>%
dplyr::select(Date=date,new_deaths,new_cases)%>%
dplyr::mutate(new_deaths=replace_na(new_deaths,0),
new_cases=replace_na(new_cases,0),)%>%
dplyr::mutate(Date=as.Date(Date))%>%
dplyr::mutate(rolldeath_14=zoo::rollmean(new_deaths,k=14,fill=0),
rollcases_14=zoo::rollmean(new_cases,k=14,fill=0))
View(cas_dea)
p_cas_dea<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_rect(aes(xmin=as.POSIXct("2020-04-01"),xmax=as.POSIXct("2020-11-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-01-01"),xmax=as.POSIXct("2021-08-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-12-01"),xmax=as.POSIXct("2022-04-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_line(aes(y=round(rolldeath_14,0)*10,color="red"))+
geom_line(aes(y=round(rollcases_14,0)))+
labs(y="Reported cases")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,45000),
breaks=seq(0,45000,4000),
sec.axis=sec_axis(trans=~./10,name="<span style='color:red'>Number of deaths</span>",breaks=seq(0,4500,400)))+
theme(legend.position="none",
axis.title.y=element_markdown(),
axis.title.y.right=element_markdown(),
axis.text.y.right=element_text(color="red"),
axis.ticks.y.right=element_line(color="red"))+
annotate("label",x=c(as.POSIXct("2020-07-15"),as.POSIXct("2021-04-15"),as.POSIXct("2022-01-25")),y=c(45000,45000,45000),label=c("1st Wave","2nd Wave","3rd wave"),fill="darkgrey",alpha=0.25)
#library(ggpubr)
library(dslabs)
p_cas_dea<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_rect(aes(xmin=as.POSIXct("2020-04-01"),xmax=as.POSIXct("2020-11-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-01-01"),xmax=as.POSIXct("2021-08-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-12-01"),xmax=as.POSIXct("2022-04-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_line(aes(y=round(rolldeath_14,0)*10,color="red"))+
geom_line(aes(y=round(rollcases_14,0)))+
labs(y="Reported cases")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,45000),
breaks=seq(0,45000,4000),
sec.axis=sec_axis(trans=~./10,name="<span style='color:red'>Number of deaths</span>",breaks=seq(0,4500,400)))+
theme(legend.position="none",
axis.title.y=element_markdown(),
axis.title.y.right=element_markdown(),
axis.text.y.right=element_text(color="red"),
axis.ticks.y.right=element_line(color="red"))+
annotate("label",x=c(as.POSIXct("2020-07-15"),as.POSIXct("2021-04-15"),as.POSIXct("2022-01-25")),y=c(45000,45000,45000),label=c("1st Wave","2nd Wave","3rd wave"),fill="darkgrey",alpha=0.25)
#library(ggpubr)
#library(dslabs)
library(ggtext)
p_cas_dea<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_rect(aes(xmin=as.POSIXct("2020-04-01"),xmax=as.POSIXct("2020-11-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-01-01"),xmax=as.POSIXct("2021-08-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-12-01"),xmax=as.POSIXct("2022-04-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_line(aes(y=round(rolldeath_14,0)*10,color="red"))+
geom_line(aes(y=round(rollcases_14,0)))+
labs(y="Reported cases")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,45000),
breaks=seq(0,45000,4000),
sec.axis=sec_axis(trans=~./10,name="<span style='color:red'>Number of deaths</span>",breaks=seq(0,4500,400)))+
theme(legend.position="none",
axis.title.y=element_markdown(),
axis.title.y.right=element_markdown(),
axis.text.y.right=element_text(color="red"),
axis.ticks.y.right=element_line(color="red"))+
annotate("label",x=c(as.POSIXct("2020-07-15"),as.POSIXct("2021-04-15"),as.POSIXct("2022-01-25")),y=c(45000,45000,45000),label=c("1st Wave","2nd Wave","3rd wave"),fill="darkgrey",alpha=0.25)
p_cas_dea
ggsave("Reported_cases_deaths.jpg",plot=p_cas_dea,dpi=300,height=5,width=7.5)
SI_VA_tab<-cas_wor%>%
dplyr::filter(location=="Peru")%>%
dplyr::select(Date=date,
SI=stringency_index,
Vac=total_vaccinations)%>%
dplyr::mutate(Date=as.Date(Date),
log_vac=log10(Vac))
p_SIVac<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_bar(data=SI_VA_tab,aes(y=SI),stat="identity",fill="gray85")+
geom_line(data=SI_VA_tab,aes(y=log_vac*10,group=count),linetype="longdash",color="dodgerblue",size=1)+
labs(y="Stringency index")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,100),
breaks=seq(0,100,10),
sec.axis=sec_axis(trans=~./10,name=expression(Total~vaccinations~(log[10])),breaks=seq(0,10,1)))+
theme(legend.position="none",
axis.title.y.right=element_text(color="dodgerblue"),
axis.text.y.right=element_text(color="dodgerblue"),
axis.ticks.y.right=element_line(color="dodgerblue"))
p_SIVac
p_SIVac<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_bar(data=SI_VA_tab,aes(y=SI),stat="identity",fill="gray85")+
geom_line(data=SI_VA_tab,aes(y=log_vac*10),linetype="longdash",color="dodgerblue",size=1)+
labs(y="Stringency index")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,100),
breaks=seq(0,100,10),
sec.axis=sec_axis(trans=~./10,name=expression(Total~vaccinations~(log[10])),breaks=seq(0,10,1)))+
theme(legend.position="none",
axis.title.y.right=element_text(color="dodgerblue"),
axis.text.y.right=element_text(color="dodgerblue"),
axis.ticks.y.right=element_line(color="dodgerblue"))
p_SIVac
ggsave("Stringency_index_Vaccinations.jpg",plot=p_SIVac,dpi=300,height=5,width=7.5)
df_p<-tabla%>%
dplyr::filter(Country=="Peru")%>%
drop_na(date)
df_p$month<-as.numeric(sapply(strsplit(df_p$date,"-"),"[",2))
df_p$M<-as.character(month(ymd(010101) + months(df_p$month-1),label=TRUE,abbr=TRUE))
library(lubridate)
df_p$month<-as.numeric(sapply(strsplit(df_p$date,"-"),"[",2))
df_p$M<-as.character(month(ymd(010101) + months(df_p$month-1),label=TRUE,abbr=TRUE))
df_p$year<-sapply(strsplit(df_p$date,"-"),"[",1)
df_p$y_m<-paste(df_p$year,df_p$M,sep="-")
df_p$VOC<-sapply(strsplit(df_p$variant," "),"[",2)
df_p$VOC[is.na(df_p$VOC)]<-"Other"
for(i in 1:nrow(df_p)){
if(!(df_p$VOC[i] %in% c("Lambda","Gamma","Alpha","Delta","Mu","Omicron","Other"))){
df_p$VOC[i]<-"Other"
}
}
df_p_cg<-df_p%>%dplyr::group_by(y_m,VOC)%>%
dplyr::summarise(count=n())%>%
dplyr::mutate(percentage=count/sum(count))
df_p_cg$y_m<-factor(df_p_cg$y_m,levels=c("2020-Feb","2020-Mar","2020-Apr","2020-May","2020-Jun","2020-Jul","2020-Aug","2020-Sep","2020-Oct","2020-Nov","2020-Dec","2021-Jan","2021-Feb","2021-Mar","2021-Apr","2021-May","2021-Jun","2021-Jul","2021-Aug","2021-Sep","2021-Oct","2021-Nov","2021-Dec","2022-Jan","2022-Feb","2022-Mar","2022-Apr"))
df_p_cg$VOC<-factor(df_p_cg$VOC,levels=c("Lambda","Gamma","Alpha","Delta","Mu","Omicron","Other"))
p_fin<-ggplot(subset(df_p_cg,!(y_m%in%not_month)),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.position="none")+
scale_y_continuous(position="left")
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.position="none")+
scale_y_continuous(position="left")
p_fin
ggsave("Relative_Prevalence_VOCI",plot=p_fin,dpi=500,height=5,width=7.5)
ggsave("Relative_Prevalence_VOCI.jpg",plot=p_fin,dpi=500,height=5,width=7.5)
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
xlim(c(-4,16))
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))
ggsave("Relative_Prevalence_VOCI.jpg",plot=p_fin,dpi=500,height=5,width=7.5)
df_p_cg$y_m
test<-as.Date(paste("1-",df_p_cg$y_m,sep=""),"%d-%Y-%B")
test
p_fin<-ggplot(subset(df_p_cg),aes(x=y_m,y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))
p_fin
View(df_p_cg)
df_p_cg$y_m<-as.Date(paste("1-",df_p_cg$y_m,sep=""),"%d-%Y-%B")
View(df_p_cg)
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-03-01"),as.POSIXct("2022-04-30")))
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-02-28"),as.POSIXct("2022-04-30")))
p_fin
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-01-30"),as.POSIXct("2022-04-30")))
p_fin
p_cas_dea<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_rect(aes(xmin=as.POSIXct("2020-04-01"),xmax=as.POSIXct("2020-11-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-01-01"),xmax=as.POSIXct("2021-08-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_rect(aes(xmin=as.POSIXct("2021-12-01"),xmax=as.POSIXct("2022-04-01"),ymin=0,ymax=44000),fill="gray85",alpha=0.2)+
geom_line(aes(y=round(rolldeath_14,0)*10,color="red"))+
geom_line(aes(y=round(rollcases_14,0)))+
labs(y="Reported cases")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-01-30"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,45000),
breaks=seq(0,45000,4000),
sec.axis=sec_axis(trans=~./10,name="<span style='color:red'>Number of deaths</span>",breaks=seq(0,4500,400)))+
theme(legend.position="none",
axis.title.y=element_markdown(),
axis.title.y.right=element_markdown(),
axis.text.y.right=element_text(color="red"),
axis.ticks.y.right=element_line(color="red"))+
annotate("label",x=c(as.POSIXct("2020-07-15"),as.POSIXct("2021-04-15"),as.POSIXct("2022-01-25")),y=c(45000,45000,45000),label=c("1st Wave","2nd Wave","3rd wave"),fill="darkgrey",alpha=0.25)
ggsave("Reported_cases_deaths.jpg",plot=p_cas_dea,dpi=300,height=5,width=7.5)
p_SIVac<-ggplot(data=cas_dea[7:(nrow(cas_dea)-7),],aes(x=as.POSIXct(Date)))+
geom_bar(data=SI_VA_tab,aes(y=SI),stat="identity",fill="gray85")+
geom_line(data=SI_VA_tab,aes(y=log_vac*10),linetype="longdash",color="dodgerblue",size=1)+
labs(y="Stringency index")+
theme(axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-01-30"),as.POSIXct("2022-04-30")))+
scale_y_continuous(limits=c(0,100),
breaks=seq(0,100,10),
sec.axis=sec_axis(trans=~./10,name=expression(Total~vaccinations~(log[10])),breaks=seq(0,10,1)))+
theme(legend.position="none",
axis.title.y.right=element_text(color="dodgerblue"),
axis.text.y.right=element_text(color="dodgerblue"),
axis.ticks.y.right=element_line(color="dodgerblue"))
ggsave("Stringency_index_Vaccinations.jpg",plot=p_SIVac,dpi=300,height=5,width=7.5)
p_SIVac
p_fin<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-01-30"),as.POSIXct("2022-04-30")))
library(ggpubr)
#4depon1,2,3_Integrated_Figure####
leg<--get_legend(p_rel_prev)
p_rel_prev<-ggplot(subset(df_p_cg),aes(x=as.POSIXct(y_m),y=percentage,fill=VOC))+
geom_bar(stat="identity")+
theme(axis.text.x=element_text(angle=90,hjust=0,vjust=0.5),axis.title.x=element_blank())+
labs(y="Relative prevalence")+
scale_fill_manual(values=cols)+
theme(legend.title=element_blank(),
legend.position="bottom")+
guides(fill=guide_legend(nrow=1))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct("2020-01-30"),as.POSIXct("2022-04-30")))
ggsave("Relative_Prevalence_VOCI.jpg",plot=p_rel_prev,dpi=500,height=5,width=7.5)
#4depon1,2,3_Integrated_Figure####
leg<-get_legend(p_rel_prev)
p_rel_prev_woleg<-p_rel_prev+
theme(legend.position="none")
p_rel_prev_woleg
Figure1<-ggarrange(p_cas_dea,p_SIVac,p_rel_prev_woleg,ncol=1,nrow=3,align="hv",labels=c("A","B","C"),common.legend=T,legend.grob=leg,legend="bottom")
ggsave(filename="General_analysis.jpg",plot=Figure1,dpi=300,height=11,width=7.5)
