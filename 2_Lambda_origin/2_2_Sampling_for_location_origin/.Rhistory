met_filt<-data%>%
filter(name_analysis%in%datos_fin$name_analysis)
met_filt$age<-gsub("#N/A","Unknown",met_filt$age)
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
right_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
p
ggsave(paste("sample_v2_",number,".jpg",sep=""),plot=p,dpi=300,height=9,width=5)
sampling_2<-function(seed=9876345,number="19",from="2020-12-01",to="2021-09-30",genpcas=1000){
samp_dat<-final_data%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(collection_date>=as.Date(from)&
collection_date<=as.Date(to)&
Country%in%c("Argentina","Chile","Peru"))%>%
dplyr::ungroup()%>%
dplyr::mutate(samp_size=round(Lambda_cases/(sum(Lambda_cases,na.rm=T)/genpcas),0))
set.seed(seed)
datos_tsv<-data%>%
dplyr::filter(date>=as.Date(from))%>%
dplyr::filter(date<=as.Date(to))%>%
dplyr::select(name_analysis,pango_lineage,variant,Country,date)%>%
filter(Country%in%c("Argentina","Chile","Peru"))%>%
group_by(Country)%>%
dplyr::mutate(week=as.Date(cut.Date(date,breaks="1 week")))
datos_tsv_sum<-datos_tsv%>%
dplyr::group_by(week,Country)%>%
dplyr::summarise(new_count=n())
datos_list<-list()
for(i in 1:nrow(samp_dat)){
print(i)
name<-paste(samp_dat$Country[i],samp_dat$collection_date[i],sep="_")
if(samp_dat$samp_size[i]>0){
datos<-datos_tsv%>%
dplyr::filter(Country==samp_dat$Country[i]&
week==samp_dat$collection_date[i])
if(nrow(datos)>=samp_dat$samp_size[i]){
datos_list[[name]]<-datos%>%
dplyr::sample_n(samp_dat$samp_size[i])
}else{
datos_list[[name]]<-datos
}
}
}
datos_fin<-do.call(rbind,datos_list)
met_filt<-data%>%
filter(name_analysis%in%datos_fin$name_analysis)
met_filt$age<-gsub("#N/A","Unknown",met_filt$age)
write.table(met_filt,paste("sample_v2_",number,".tsv",sep=""),quote=FALSE,sep="\t",col.names=TRUE,row.names=FALSE)
writeLines(met_filt$name_analysis,paste("sample_v2_",number,".list",sep=""))
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
right_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
ggsave(paste("sample_v2_",number,".jpg",sep=""),plot=p,dpi=300,height=9,width=5)
}
sampling_2(64563,"16","2020-12-01","2021-09-30",200)
sampling_2(245635,"17","2020-12-01","2021-09-30",200)
sampling_2(9876345,"18","2020-12-01","2021-09-30",200)
sampling_2<-function(seed=9876345,number="19",from="2020-12-01",to="2021-09-30",genpcas=1000){
samp_dat<-final_data%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(collection_date>=as.Date(from)&
collection_date<=as.Date(to)&
Country%in%c("Argentina","Chile","Peru"))%>%
dplyr::ungroup()%>%
dplyr::mutate(samp_size=round(Lambda_cases/(sum(Lambda_cases,na.rm=T)/genpcas),0))
set.seed(seed)
datos_tsv<-data%>%
dplyr::filter(date>=as.Date(from))%>%
dplyr::filter(date<=as.Date(to))%>%
dplyr::select(name_analysis,pango_lineage,variant,Country,date)%>%
filter(Country%in%c("Argentina","Chile","Peru"))%>%
group_by(Country)%>%
dplyr::mutate(week=as.Date(cut.Date(date,breaks="1 week")))
datos_tsv_sum<-datos_tsv%>%
dplyr::group_by(week,Country)%>%
dplyr::summarise(new_count=n())
datos_list<-list()
for(i in 1:nrow(samp_dat)){
print(i)
name<-paste(samp_dat$Country[i],samp_dat$collection_date[i],sep="_")
if(samp_dat$samp_size[i]>0){
datos<-datos_tsv%>%
dplyr::filter(Country==samp_dat$Country[i]&
week==samp_dat$collection_date[i])
if(nrow(datos)>=samp_dat$samp_size[i]){
datos_list[[name]]<-datos%>%
dplyr::sample_n(samp_dat$samp_size[i])
}else{
datos_list[[name]]<-datos
}
}
}
datos_fin<-do.call(rbind,datos_list)
met_filt<-data%>%
filter(name_analysis%in%datos_fin$name_analysis)
met_filt$age<-gsub("#N/A","Unknown",met_filt$age)
write.table(met_filt,paste("sample_v2_",number,".tsv",sep=""),quote=FALSE,sep="\t",col.names=TRUE,row.names=FALSE)
writeLines(met_filt$name_analysis,paste("sample_v2_",number,".list",sep=""))
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
right_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=new_count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
ggsave(paste("sample_v2_",number,".jpg",sep=""),plot=p,dpi=300,height=9,width=5)
}
sampling_2(64563,"16","2020-12-01","2021-09-30",200)
sampling_2(245635,"17","2020-12-01","2021-09-30",200)
sampling_2(9876345,"18","2020-12-01","2021-09-30",200)
sampling_2(9876345,"19","2020-12-01","2021-09-30",1000)
View(gen_samp)
sampling_2<-function(seed=9876345,number="19",from="2020-12-01",to="2021-09-30",genpcas=1000){
samp_dat<-final_data%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(collection_date>=as.Date(from)&
collection_date<=as.Date(to)&
Country%in%c("Argentina","Chile","Peru"))%>%
dplyr::ungroup()%>%
dplyr::mutate(samp_size=round(Lambda_cases/(sum(Lambda_cases,na.rm=T)/genpcas),0))
set.seed(seed)
datos_tsv<-data%>%
dplyr::filter(date>=as.Date(from))%>%
dplyr::filter(date<=as.Date(to))%>%
dplyr::select(name_analysis,pango_lineage,variant,Country,date)%>%
filter(Country%in%c("Argentina","Chile","Peru"))%>%
group_by(Country)%>%
dplyr::mutate(week=as.Date(cut.Date(date,breaks="1 week")))
datos_tsv_sum<-datos_tsv%>%
dplyr::group_by(week,Country)%>%
dplyr::summarise(new_count=n())
datos_list<-list()
for(i in 1:nrow(samp_dat)){
print(i)
name<-paste(samp_dat$Country[i],samp_dat$collection_date[i],sep="_")
if(samp_dat$samp_size[i]>0){
datos<-datos_tsv%>%
dplyr::filter(Country==samp_dat$Country[i]&
week==samp_dat$collection_date[i])
if(nrow(datos)>=samp_dat$samp_size[i]){
datos_list[[name]]<-datos%>%
dplyr::sample_n(samp_dat$samp_size[i])
}else{
datos_list[[name]]<-datos
}
}
}
datos_fin<-do.call(rbind,datos_list)
met_filt<-data%>%
filter(name_analysis%in%datos_fin$name_analysis)
met_filt$age<-gsub("#N/A","Unknown",met_filt$age)
write.table(met_filt,paste("sample_v2_",number,".tsv",sep=""),quote=FALSE,sep="\t",col.names=TRUE,row.names=FALSE)
writeLines(met_filt$name_analysis,paste("sample_v2_",number,".list",sep=""))
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
left_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=new_count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
ggsave(paste("sample_v2_",number,".jpg",sep=""),plot=p,dpi=300,height=9,width=5)
}
sampling_2(64563,"16","2020-12-01","2021-09-30",200)
sampling_2(245635,"17","2020-12-01","2021-09-30",200)
sampling_2(9876345,"18","2020-12-01","2021-09-30",200)
sampling_2(9876345,"19","2020-12-01","2021-09-30",1000)
View(samp_dat)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=new_count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
p
View(gen_samp)
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
left_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=new_count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
p
sampling_2(9876345,"19","2020-12-01","2021-09-30",500)
sampling_2(9876345,"19","2020-12-01","2021-09-30",750)
sampling_2(9876345,"19","2020-12-01","2021-09-30",600)
sampling_2(9876345,"19","2020-12-01","2021-09-30",750)
sampling_2(64563,"16","2020-12-01","2021-09-30",200)
sampling_2(245635,"17","2020-12-01","2021-09-30",200)
sampling_2(9876345,"18","2020-12-01","2021-09-30",200)
sampling_2(85465,"19","2020-12-01","2021-09-30",750)
sampling_2(654123,"20","2020-12-01","2021-09-30",750)
sampling_2(7549318,"21","2020-12-01","2021-09-30",750)
View(samp_dat)
View(gen_samp)
View(datos_fin)
d16<-sampling_2(64563,"16","2020-12-01","2021-09-30",200)
sampling_2<-function(seed=9876345,number="19",from="2020-12-01",to="2021-09-30",genpcas=1000){
samp_dat<-final_data%>%
dplyr::mutate(collection_date=as.Date(collection_date))%>%
dplyr::filter(collection_date>=as.Date(from)&
collection_date<=as.Date(to)&
Country%in%c("Argentina","Chile","Peru"))%>%
dplyr::ungroup()%>%
dplyr::mutate(samp_size=round(Lambda_cases/(sum(Lambda_cases,na.rm=T)/genpcas),0))
set.seed(seed)
datos_tsv<-data%>%
dplyr::filter(date>=as.Date(from))%>%
dplyr::filter(date<=as.Date(to))%>%
dplyr::select(name_analysis,pango_lineage,variant,Country,date)%>%
filter(Country%in%c("Argentina","Chile","Peru"))%>%
group_by(Country)%>%
dplyr::mutate(week=as.Date(cut.Date(date,breaks="1 week")))
datos_tsv_sum<-datos_tsv%>%
dplyr::group_by(week,Country)%>%
dplyr::summarise(new_count=n())
datos_list<-list()
for(i in 1:nrow(samp_dat)){
print(i)
name<-paste(samp_dat$Country[i],samp_dat$collection_date[i],sep="_")
if(samp_dat$samp_size[i]>0){
datos<-datos_tsv%>%
dplyr::filter(Country==samp_dat$Country[i]&
week==samp_dat$collection_date[i])
if(nrow(datos)>=samp_dat$samp_size[i]){
datos_list[[name]]<-datos%>%
dplyr::sample_n(samp_dat$samp_size[i])
}else{
datos_list[[name]]<-datos
}
}
}
datos_fin<-do.call(rbind,datos_list)
met_filt<-data%>%
filter(name_analysis%in%datos_fin$name_analysis)
met_filt$age<-gsub("#N/A","Unknown",met_filt$age)
write.table(met_filt,paste("sample_v2_",number,".tsv",sep=""),quote=FALSE,sep="\t",col.names=TRUE,row.names=FALSE)
writeLines(met_filt$name_analysis,paste("sample_v2_",number,".list",sep=""))
gen_samp<-datos_fin%>%
group_by(week,Country)%>%
summarise(samp_gen=n())%>%
right_join(samp_dat,by=c("week"="collection_date","Country"="Country"))%>%
left_join(datos_tsv_sum)
gen_samp$samp_gen[is.na(gen_samp$samp_gen)]<-0
factor<-max(samp_dat$count,na.rm=T)
p<-ggplot(gen_samp,aes(x=as.POSIXct(week)))+
geom_bar(aes(y=new_count),stat="identity",fill="lightgrey")+
geom_bar(aes(y=samp_gen,fill=Country),stat="identity")+
geom_line(aes(y=Lambda_cases/factor))+
facet_wrap(~Country,nrow=3,ncol=1,scales="free_y")+
scale_y_continuous(sec.axis=sec_axis(trans=~.*factor,name="Lambda cases"))+
scale_x_datetime(date_breaks="1 month",date_labels="%Y-%b",limits=c(as.POSIXct(from),as.POSIXct(to)))+
theme(legend.position="none",
axis.title.x=element_blank(),
axis.text.x=element_text(angle=90,hjust=0,vjust=0.5))+
scale_fill_manual(values=count_colors)
ggsave(paste("sample_v2_",number,".jpg",sep=""),plot=p,dpi=300,height=9,width=5)
return(gen_samp)
}
d16<-sampling_2(64563,"16","2020-12-01","2021-09-30",200)
d17<-sampling_2(245635,"17","2020-12-01","2021-09-30",200)
d18<-sampling_2(9876345,"18","2020-12-01","2021-09-30",200)
d19<-sampling_2(85465,"19","2020-12-01","2021-09-30",750)
d20<-sampling_2(654123,"20","2020-12-01","2021-09-30",750)
View(d16)
cor<-ggplot(d16,aes(x=Lambda_cases,y=new_count))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(cor_cas_sam$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
cor<-ggplot(d16,aes(x=Lambda_cases,y=new_count))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
#library(zoo)
library(ggpubr)
cor<-ggplot(d16,aes(x=Lambda_cases,y=new_count))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
#library(zoo)
library(ggpubr)
#library(dslabs)
#library(ggtext)
library(ggpmisc)
cor<-ggplot(d16,aes(x=Lambda_cases,y=new_count))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
cor
cor16<-ggplot(d16,aes(x=Lambda_cases,y=samp_gen)+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
cor16<-ggplot(d16,aes(x=Lambda_cases,y=samp_gen))+
cor16<-ggplot(d16,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
cor16
cor<-ggplot(d16,aes(x=Lambda_cases,y=new_count))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="bottom",
legend.title=element_blank())+
guides(color=guide_legend(nrow=1))
leg<-get_legend(cor)
cor_notleg<-cor+
theme(legend.position="none")+
ggtitle("Before sampling")
cor
cor16<-ggplot(d16,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")
cor17<-ggplot(d17,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")
cor18<-ggplot(d18,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")
p_cors_200<-ggarrange(cornotleg,cor16,cor17,cor18,legend="bottom",legend.grob=leg,common.legend=T)
p_cors_200<-ggarrange(cor_notleg,cor16,cor17,cor18,legend="bottom",legend.grob=leg,common.legend=T)
ggsave("Lambda_correlations_plot_200.jpg",plot=p_cors_200,dpi=500,height=7.5,width=7.5)
cor16<-ggplot(d16,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 1")
cor17<-ggplot(d17,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 2")
cor18<-ggplot(d18,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 3")
p_cors_200<-ggarrange(cor_notleg,cor16,cor17,cor18,legend="bottom",legend.grob=leg,common.legend=T)
ggsave("Lambda_correlations_plot_200.jpg",plot=p_cors_200,dpi=500,height=7.5,width=7.5)
cor19<-ggplot(d19,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 1")
cor20<-ggplot(d20,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 2")
cor21<-ggplot(d21,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 3")
d21<-sampling_2(7549318,"21","2020-12-01","2021-09-30",750)
cor19<-ggplot(d19,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 1")
cor20<-ggplot(d20,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 2")
cor21<-ggplot(d21,aes(x=Lambda_cases,y=samp_gen))+
geom_point(aes(color=Country))+
scale_color_manual(values=count_colors[names(count_colors)%in%levels(as.factor(d16$Country))])+
geom_smooth(method="lm")+
stat_poly_eq(aes(label=after_stat(rr.label)))+
labs(y="Lambda Genomes",x="Lambda cases")+
theme(legend.position="none")+
ggtitle("sample 3")
p_cors_750<-ggarrange(cor_notleg,cor19,cor20,cor21,legend="bottom",legend.grob=leg,common.legend=T)
ggsave("Lambda_correlations_plot_750.jpg",plot=p_cors_750,dpi=500,height=7.5,width=7.5)
